/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_sco_jni_MemoryAddress */

#ifndef _Included_com_sco_jni_MemoryAddress
#define _Included_com_sco_jni_MemoryAddress
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: ([[[[I)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress___3_3_3_3I
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: ([[[[C)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress___3_3_3_3C
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: ([[[[S)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress___3_3_3_3S
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: ([[[[J)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress___3_3_3_3J
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: ([[[[Z)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress___3_3_3_3Z
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: ([[[[B)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress___3_3_3_3B
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: ([[[I)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress___3_3_3I
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: ([[I)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress___3_3I
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: ([[C)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress___3_3C
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: ([I)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress___3I
  (JNIEnv *, jobject, jintArray);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: ([C)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress___3C
  (JNIEnv *, jobject, jcharArray);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress__Z
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: (B)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress__B
  (JNIEnv *, jobject, jbyte);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: (S)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress__S
  (JNIEnv *, jobject, jshort);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress__I
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress__F
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress__D
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     com_sco_jni_MemoryAddress
 * Method:    printAddress
 * Signature: (C)V
 */
JNIEXPORT void JNICALL Java_com_sco_jni_MemoryAddress_printAddress__C
  (JNIEnv *, jobject, jchar);

#ifdef __cplusplus
}
#endif
#endif
